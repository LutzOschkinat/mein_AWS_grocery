"""Initial migration

Revision ID: 4c3f56e4cca8
Revises: 
Create Date: 2025-05-11 20:42:53.901313

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4c3f56e4cca8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('basket_items', schema=None) as batch_op:
        batch_op.drop_constraint('basket_items_user_id_product_id_key', type_='unique')
        batch_op.drop_constraint('basket_items_product_id_fkey', type_='foreignkey')

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               type_=sa.String(length=500),
               existing_nullable=True)
        batch_op.alter_column('price',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.alter_column('category',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=True)

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.add_column(sa.Column('author', sa.String(length=100), nullable=False))
        batch_op.alter_column('rating',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.alter_column('comment',
               existing_type=sa.TEXT(),
               type_=sa.String(length=500),
               existing_nullable=True)
        batch_op.drop_constraint('reviews_user_id_fkey', type_='foreignkey')
        batch_op.drop_column('user_id')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('fav_products',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('purchased_products',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.drop_constraint('users_username_key', type_='unique')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_unique_constraint('users_username_key', ['username'])
        batch_op.alter_column('purchased_products',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('fav_products',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('reviews_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.alter_column('comment',
               existing_type=sa.String(length=500),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('rating',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.drop_column('author')

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.alter_column('category',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('price',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.String(length=500),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('basket_items', schema=None) as batch_op:
        batch_op.create_foreign_key('basket_items_product_id_fkey', 'products', ['product_id'], ['id'])
        batch_op.create_unique_constraint('basket_items_user_id_product_id_key', ['user_id', 'product_id'])

    # ### end Alembic commands ###
